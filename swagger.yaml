swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "users.swagger.io"
basePath: "/v2"
tags:
- name: "user"
  description: "Everything about users"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"

schemes:
- "https"
- "http"
paths:
  /usersCreate:
    post:
      tags:
      - "pet"
      summary: "Add a new user"
      description: ""
      operationId: "addUser"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "405":
          description: "Invalid input"
   
  /usersGet:
    get:
      tags:
      - "users"
      summary: "Get users"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "getUsers"
      produces:
      - "string"
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "Status values that need to be considered for filter"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "available"
          - "pending"
          - "sold"
          default: "available"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "400":
          description: "Invalid status value"
 
securityDefinitions:
  petstore_auth:
    
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:

  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      mobNum:
        type: "string"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"